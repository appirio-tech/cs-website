/**
 * Java tokenizer for codemirror
 *
 * @author Patrick Wied
 * @version 2010-10-07
 */
var tokenizeJava=function(){function a(a,b){var c=!1,d;while(!a.endOfLine()){var d=a.next();if(d==b&&!c)return!1;c=!c&&d=="\\"}return c}function f(a,b){return function(c,d){var e=a,h=g(a,b,c,function(a){e=a}),i=h.type=="operator"||h.type=="keyword c"||h.type.match(/^[\[{}\(,;:]$/);return(i!=b||e!=a)&&d(f(e,i)),h}}function g(f,g,h,i){function j(){return h.next(),h.nextWhileMatches(d),{type:"number",style:"java-atom"}}function k(){h.nextWhileMatches(/[0-9]/),h.equals(".")&&(h.next(),h.nextWhileMatches(/[0-9]/));if(h.equals("e")||h.equals("E"))h.next(),h.equals("-")&&h.next(),h.nextWhileMatches(/[0-9]/);return{type:"number",style:"java-atom"}}function l(){h.nextWhileMatches(e);var a=h.get(),c=b.hasOwnProperty(a)&&b.propertyIsEnumerable(a)&&b[a];return c?{type:c.type,style:c.style,content:a}:{type:"variable",style:"java-variable",content:a}}function m(){return a(h,"/"),h.nextWhileMatches(/[gi]/),{type:"regexp",style:"java-string"}}function n(a){var b="/*",c=a=="*";for(;;){if(h.endOfLine())break;var d=h.next();if(d=="/"&&c){b=null;break}c=d=="*"}return i(b),{type:"comment",style:"java-comment"}}function o(a){var b="/**",c=a=="*";for(;;){if(h.endOfLine())break;var d=h.next();if(d=="/"&&c){b=null;break}c=d=="*"}return i(b),{type:"javadoc",style:"javadoc-comment"}}function p(){h.nextWhileMatches(e);var a=h.get();return{type:"annotation",style:"java-annotation",content:a}}function q(){return h.nextWhileMatches(c),{type:"operator",style:"java-operator"}}function r(b){var c=a(h,b);return i(c?b:null),{type:"string",style:"java-string"}}if(f=='"'||f=="'")return r(f);var s=h.next();return f=="/*"?n(s):f=="/**"?o(s):s=='"'||s=="'"?r(s):/[\[\]{}\(\),;\:\.]/.test(s)?{type:s,style:"java-punctuation"}:s=="0"&&(h.equals("x")||h.equals("X"))?j():/[0-9]/.test(s)?k():s=="@"?p():s=="/"?h.equals("*")?(h.next(),h.equals("*")?o(s):n(s)):h.equals("/")?(a(h,null),{type:"comment",style:"java-comment"}):g?m():q():c.test(s)?q():l()}var b=function(){function a(a,b){return{type:a,style:"java-"+b}}var b=a("keyword a","keyword"),c=a("keyword b","keyword"),d=a("keyword c","keyword"),e=a("operator","keyword"),f=a("atom","atom");return{"if":b,"while":b,"with":b,"else":c,"do":c,"try":c,"finally":c,"return":d,"break":d,"continue":d,"new":d,"throw":d,"throws":c,"in":e,"typeof":e,"instanceof":e,"catch":a("catch","keyword"),"for":a("for","keyword"),"switch":a("switch","keyword"),"case":a("case","keyword"),"default":a("default","keyword"),"true":f,"false":f,"null":f,"class":a("class","keyword"),"interface":a("interface","keyword"),"package":d,"import":d,"implements":d,"extends":d,"super":d,"public":d,"private":d,"protected":d,"transient":d,"this":d,"static":d,"final":d,"const":d,"abstract":d,"static":d,"int":d,"double":d,"long":d,"boolean":d,"char":d,"void":d,"byte":d,"float":d,"short":d}}(),c=/[+\-*&%=<>!?|]/,d=/[0-9A-Fa-f]/,e=/[\w\$_]/;return function(a,b){return tokenizer(a,b||f(!1,!0))}}()